# StatefulSet is a workload API object used to manage stateful applications.
# It handles the deployment and scaling of a set of Pods.
# Key features:
#   Stable, unique network identifiers for each Pod.
#   Stable, persistent storage for data.
#   Ordered, graceful deployment and scaling.
#   Ordered, automated rolling updates.
#   Unlike a Deployment, a StatefulSet maintains a sticky identity for each Pod.
# Limitations:
  # Storage must be provisioned by a PersistentVolume Provisioner.
  # Scaling down wonâ€™t delete associated volumes for data safety.
  # Requires a Headless Service for network identity.
  # No guarantees on pod termination during StatefulSet deletion
# Remember that StatefulSets are commonly used for databases, caching systems, and other stateful workloads where stable identity and persistent storage are critical.

apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: registry.k8s.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi